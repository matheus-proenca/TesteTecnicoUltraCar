// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Testetecnico_Ultracar;

#nullable disable

namespace Testetecnico_Ultracar.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240922033549_testetecnico")]
    partial class testetecnico
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Testetecnico_Ultracar.Models.Entrega", b =>
                {
                    b.Property<int>("EntregaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    b.Property<int>("Cep")
                        .HasColumnType("integer");

                    b.Property<string>("EstadoDeEspera")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("PecaId")
                        .HasColumnType("integer");

                    b.HasKey("EntregaId");

                    b.HasIndex("OrcamentoId")
                        .IsUnique();

                    b.ToTable("Entrega");
                });

            modelBuilder.Entity("Testetecnico_Ultracar.Models.Estoque", b =>
                {
                    b.Property<int>("EstoqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EstoqueId"));

                    b.Property<int>("EntregaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Entregue")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Enviado")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PecaId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("EstoqueId");

                    b.HasIndex("PecaId")
                        .IsUnique();

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("Testetecnico_Ultracar.Models.Orcamento", b =>
                {
                    b.Property<int>("OrcamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrcamentoId"));

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlacaVeiculo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric");

                    b.HasKey("OrcamentoId");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("Testetecnico_Ultracar.Models.Peca", b =>
                {
                    b.Property<int>("PecaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("PecaId");

                    b.ToTable("Pecas");
                });

            modelBuilder.Entity("Testetecnico_Ultracar.Models.QuantidadePeca", b =>
                {
                    b.Property<int>("QuantidadePecaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("QuantidadePecaId"));

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("integer");

                    b.Property<int>("PecaId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("QuantidadePecaId");

                    b.HasIndex("OrcamentoId")
                        .IsUnique();

                    b.HasIndex("PecaId")
                        .IsUnique();

                    b.ToTable("QuantidadePecas");
                });

            modelBuilder.Entity("Testetecnico_Ultracar.Models.Entrega", b =>
                {
                    b.HasOne("Testetecnico_Ultracar.Models.Estoque", "Estoque")
                        .WithMany("Entregas")
                        .HasForeignKey("EntregaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Testetecnico_Ultracar.Models.Orcamento", "Orcamento")
                        .WithOne("Entrega")
                        .HasForeignKey("Testetecnico_Ultracar.Models.Entrega", "OrcamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estoque");

                    b.Navigation("Orcamento");
                });

            modelBuilder.Entity("Testetecnico_Ultracar.Models.Estoque", b =>
                {
                    b.HasOne("Testetecnico_Ultracar.Models.Peca", "Peca")
                        .WithOne("Estoque")
                        .HasForeignKey("Testetecnico_Ultracar.Models.Estoque", "PecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peca");
                });

            modelBuilder.Entity("Testetecnico_Ultracar.Models.Peca", b =>
                {
                    b.HasOne("Testetecnico_Ultracar.Models.Entrega", "Entrega")
                        .WithMany("Peca")
                        .HasForeignKey("PecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Testetecnico_Ultracar.Models.Orcamento", "Orcamento")
                        .WithMany("Peca")
                        .HasForeignKey("PecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrega");

                    b.Navigation("Orcamento");
                });

            modelBuilder.Entity("Testetecnico_Ultracar.Models.QuantidadePeca", b =>
                {
                    b.HasOne("Testetecnico_Ultracar.Models.Orcamento", "Orcamento")
                        .WithOne("QuantidadePeca")
                        .HasForeignKey("Testetecnico_Ultracar.Models.QuantidadePeca", "OrcamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Testetecnico_Ultracar.Models.Peca", "Peca")
                        .WithOne("QuantidadePeca")
                        .HasForeignKey("Testetecnico_Ultracar.Models.QuantidadePeca", "PecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orcamento");

                    b.Navigation("Peca");
                });

            modelBuilder.Entity("Testetecnico_Ultracar.Models.Entrega", b =>
                {
                    b.Navigation("Peca");
                });

            modelBuilder.Entity("Testetecnico_Ultracar.Models.Estoque", b =>
                {
                    b.Navigation("Entregas");
                });

            modelBuilder.Entity("Testetecnico_Ultracar.Models.Orcamento", b =>
                {
                    b.Navigation("Entrega");

                    b.Navigation("Peca");

                    b.Navigation("QuantidadePeca");
                });

            modelBuilder.Entity("Testetecnico_Ultracar.Models.Peca", b =>
                {
                    b.Navigation("Estoque");

                    b.Navigation("QuantidadePeca")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
